This experiment is to see what it takes to use the DMS service to move some old MSSQL Databases to Azure using the DMS service. 

Installed docker on my local computer to make it easy to create databases with various versions. 

docker pull mcr.microsoft.com/mssql/server:2017-CU29-GDR1-ubuntu-16.04

## Primary server that has adventure works loaded.
docker run --name venky-mssql -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Ganesh20022002" -p 1433:1433 -d  mcr.microsoft.com/mssql/server:2017-CU29-GDR1-ubuntu-16.04

docker cp C:\Venky\DP-203\SowmyaVenkyRepo\mssql-backups\AdventureWorks2017.bak venky-mssql:/var/opt/mssql/data/ 

After this login to the Azure data studio, and go to connections -> Manage -> restore -> from backup and select the path where the backup is. Then restore. The screen showing the database restored is in the screenshots.

Download the data migration assistant from Azure website and install it.

####MySQL
docker pull mysql
docker run --name venky-mysql -e MYSQL_ROOT_PASSWORD=Ganesh20022002 -p 3306:3306 -d mysql:latest
docker exec -it venky-mysql bash

Download the schema and data sql
https://raw.githubusercontent.com/datacharmer/test_db/master/sakila/sakila-mv-schema.sql

docker cp mysql\mysql-sakila-sql-data.sql venky-mysql:/
docker cp mysql\mysql-sakila-sql-schema.sql venky-mysql:/
docker exec -it venky-mysql bash

mysql -p 
#enter password and login
#see databases 
show databases;


mysql -t < mysql-sakila-sql-schema.sql -p
mysql -t < mysql-sakila-sql-schema.sql  -p

#This is to push the data to the Postgres SQL hosted on Azure, deployed via the ARM template.
mysql -t < mysql-sakila-sql-schema.sql -u venkyuser@venkymysqldb -p'Ganesh20022002' -h venkymysqldb.mysql.database.azure.com -P 3306
mysql -t < mysql-sakila-sql-data.sql -u venkyuser@venkymysqldb -p'Ganesh20022002' -h venkymysqldb.mysql.database.azure.com -P 3306

####Postgres

docker run --name venky-postgres -e POSTGRES_PASSWORD=Ganesh20022002 -p 5432:5432 -d postgres
docker cp postgres\pagila_insert_data.sql venky-postgres:/
 
##Load database.
docker exec -it venky-postgres psql -U postgres -f /pagila_insert_data.sql 
docker exec -it venky-postgres psql -U postgres

psql -U venkyuser@venky-pg-1001 -h venky-pg-1001.postgres.database.azure.com


\dt to list tables.
select * from events;

#### Integration runtime install and configure.
Download and install the self host IR. 
Create the Datafactory, and create a self hosted runtime. 
Get one of the keys from the portal after we create the runtime.
Register the integration runtime with the ADF to allow communication.

cd C:\Program Files\Microsoft Integration Runtime\5.0\PowerShellScript
 
##### Yugabyte

cd C:\Venky\DP-203\Azure-DP-203\DMS_Experiments

docker pull yugabytedb/yugabyte:2.15.1.0-b175

docker run -d --name yugabyte  -p7000:7000 -p9000:9000 -p5433:5433 -p9042:9042 -v C:\Venky\DP-203\Azure-DP-203\DMS_Experiments/yb_data:/home/yugabyte/yb_data yugabytedb/yugabyte:latest bin/yugabyted start  --daemon=false --ysql_enable_auth=true

docker run -d --name yugabyte-2.8.0 -p7000:7000 -p9000:9000 -p5433:5433 -p9042:9042 yugabytedb/yugabyte:2.8.0.0-b37 bin/yugabyted start --base_dir=/home/yugabyte/yb_data --daemon=false

Go to http://localhost:9000/